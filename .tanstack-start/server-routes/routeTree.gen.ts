/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import type {
  FileRoutesByPath,
  CreateServerFileRoute,
} from '@tanstack/react-start/server'
import {
  createServerRoute,
  createServerFileRoute,
} from '@tanstack/react-start/server'

import { ServerRoute as ApiDataIdRouteImport } from './../../src/routes/api/data.id'
import { ServerRoute as ApiCertExamIdRouteImport } from './../../src/routes/api/cert.$examId'
import { ServerRoute as ApiAuthSplatRouteImport } from './../../src/routes/api/auth/$'
import { ServerRoute as ApiDataGradeExamIdRouteImport } from './../../src/routes/api/data.grade.$examId'

// Create/Update Routes

const rootRoute = createServerRoute()

const ApiDataIdRoute = ApiDataIdRouteImport.update({
  id: '/api/data/id',
  path: '/api/data/id',
  getParentRoute: () => rootRoute,
} as any)

const ApiCertExamIdRoute = ApiCertExamIdRouteImport.update({
  id: '/api/cert/$examId',
  path: '/api/cert/$examId',
  getParentRoute: () => rootRoute,
} as any)

const ApiAuthSplatRoute = ApiAuthSplatRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootRoute,
} as any)

const ApiDataGradeExamIdRoute = ApiDataGradeExamIdRouteImport.update({
  id: '/api/data/grade/$examId',
  path: '/api/data/grade/$examId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-start/server' {
  interface FileRoutesByPath {
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatRouteImport
      parentRoute: typeof rootRoute
    }
    '/api/cert/$examId': {
      id: '/api/cert/$examId'
      path: '/api/cert/$examId'
      fullPath: '/api/cert/$examId'
      preLoaderRoute: typeof ApiCertExamIdRouteImport
      parentRoute: typeof rootRoute
    }
    '/api/data/id': {
      id: '/api/data/id'
      path: '/api/data/id'
      fullPath: '/api/data/id'
      preLoaderRoute: typeof ApiDataIdRouteImport
      parentRoute: typeof rootRoute
    }
    '/api/data/grade/$examId': {
      id: '/api/data/grade/$examId'
      path: '/api/data/grade/$examId'
      fullPath: '/api/data/grade/$examId'
      preLoaderRoute: typeof ApiDataGradeExamIdRouteImport
      parentRoute: typeof rootRoute
    }
  }
}

// Add type-safety to the createFileRoute function across the route tree

declare module './../../src/routes/api/auth/$' {
  const createServerFileRoute: CreateServerFileRoute<
    FileRoutesByPath['/api/auth/$']['parentRoute'],
    FileRoutesByPath['/api/auth/$']['id'],
    FileRoutesByPath['/api/auth/$']['path'],
    FileRoutesByPath['/api/auth/$']['fullPath'],
    unknown
  >
}
declare module './../../src/routes/api/cert.$examId' {
  const createServerFileRoute: CreateServerFileRoute<
    FileRoutesByPath['/api/cert/$examId']['parentRoute'],
    FileRoutesByPath['/api/cert/$examId']['id'],
    FileRoutesByPath['/api/cert/$examId']['path'],
    FileRoutesByPath['/api/cert/$examId']['fullPath'],
    unknown
  >
}
declare module './../../src/routes/api/data.id' {
  const createServerFileRoute: CreateServerFileRoute<
    FileRoutesByPath['/api/data/id']['parentRoute'],
    FileRoutesByPath['/api/data/id']['id'],
    FileRoutesByPath['/api/data/id']['path'],
    FileRoutesByPath['/api/data/id']['fullPath'],
    unknown
  >
}
declare module './../../src/routes/api/data.grade.$examId' {
  const createServerFileRoute: CreateServerFileRoute<
    FileRoutesByPath['/api/data/grade/$examId']['parentRoute'],
    FileRoutesByPath['/api/data/grade/$examId']['id'],
    FileRoutesByPath['/api/data/grade/$examId']['path'],
    FileRoutesByPath['/api/data/grade/$examId']['fullPath'],
    unknown
  >
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/api/auth/$': typeof ApiAuthSplatRoute
  '/api/cert/$examId': typeof ApiCertExamIdRoute
  '/api/data/id': typeof ApiDataIdRoute
  '/api/data/grade/$examId': typeof ApiDataGradeExamIdRoute
}

export interface FileRoutesByTo {
  '/api/auth/$': typeof ApiAuthSplatRoute
  '/api/cert/$examId': typeof ApiCertExamIdRoute
  '/api/data/id': typeof ApiDataIdRoute
  '/api/data/grade/$examId': typeof ApiDataGradeExamIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/api/auth/$': typeof ApiAuthSplatRoute
  '/api/cert/$examId': typeof ApiCertExamIdRoute
  '/api/data/id': typeof ApiDataIdRoute
  '/api/data/grade/$examId': typeof ApiDataGradeExamIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/api/auth/$'
    | '/api/cert/$examId'
    | '/api/data/id'
    | '/api/data/grade/$examId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/api/auth/$'
    | '/api/cert/$examId'
    | '/api/data/id'
    | '/api/data/grade/$examId'
  id:
    | '__root__'
    | '/api/auth/$'
    | '/api/cert/$examId'
    | '/api/data/id'
    | '/api/data/grade/$examId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  ApiAuthSplatRoute: typeof ApiAuthSplatRoute
  ApiCertExamIdRoute: typeof ApiCertExamIdRoute
  ApiDataIdRoute: typeof ApiDataIdRoute
  ApiDataGradeExamIdRoute: typeof ApiDataGradeExamIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  ApiAuthSplatRoute: ApiAuthSplatRoute,
  ApiCertExamIdRoute: ApiCertExamIdRoute,
  ApiDataIdRoute: ApiDataIdRoute,
  ApiDataGradeExamIdRoute: ApiDataGradeExamIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/api/auth/$",
        "/api/cert/$examId",
        "/api/data/id",
        "/api/data/grade/$examId"
      ]
    },
    "/api/auth/$": {
      "filePath": "api/auth/$.ts"
    },
    "/api/cert/$examId": {
      "filePath": "api/cert.$examId.ts"
    },
    "/api/data/id": {
      "filePath": "api/data.id.ts"
    },
    "/api/data/grade/$examId": {
      "filePath": "api/data.grade.$examId.ts"
    }
  }
}
ROUTE_MANIFEST_END */
