// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import type { UserId } from './User';
import type { ColumnType, Selectable, Insertable, Updateable } from 'kysely';

/** Identifier type for public.account */
export type AccountId = string & { __brand: 'public.account' };

/** Represents the table public.account */
export default interface AccountTable {
  id: ColumnType<AccountId, AccountId, AccountId>;

  accountId: ColumnType<string, string, string>;

  providerId: ColumnType<string, string, string>;

  userId: ColumnType<UserId, UserId, UserId>;

  accessToken: ColumnType<string | null, string | null, string | null>;

  refreshToken: ColumnType<string | null, string | null, string | null>;

  idToken: ColumnType<string | null, string | null, string | null>;

  accessTokenExpiresAt: ColumnType<Date | null, Date | string | null, Date | string | null>;

  refreshTokenExpiresAt: ColumnType<Date | null, Date | string | null, Date | string | null>;

  scope: ColumnType<string | null, string | null, string | null>;

  password: ColumnType<string | null, string | null, string | null>;

  createdAt: ColumnType<Date, Date | string, Date | string>;

  updatedAt: ColumnType<Date, Date | string, Date | string>;
}

export type Account = Selectable<AccountTable>;

export type NewAccount = Insertable<AccountTable>;

export type AccountUpdate = Updateable<AccountTable>;
