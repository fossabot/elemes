/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import type { CreateFileRoute, FileRoutesByPath } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RegisterRouteImport } from './routes/register'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AppRouteImport } from './routes/_app'
import { Route as AppIndexRouteImport } from './routes/_app.index'
import { Route as AppEditRouteImport } from './routes/_app.edit'
import { Route as AppExamIdRouteImport } from './routes/_app.$examId'
import { Route as AppEditExamIdRouteImport } from './routes/_app.edit_.$examId'

// Create/Update Routes

const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)

const AppEditRoute = AppEditRouteImport.update({
  id: '/edit',
  path: '/edit',
  getParentRoute: () => AppRoute,
} as any)

const AppExamIdRoute = AppExamIdRouteImport.update({
  id: '/$examId',
  path: '/$examId',
  getParentRoute: () => AppRoute,
} as any)

const AppEditExamIdRoute = AppEditExamIdRouteImport.update({
  id: '/edit_/$examId',
  path: '/edit/$examId',
  getParentRoute: () => AppRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterRouteImport
      parentRoute: typeof rootRoute
    }
    '/_app/$examId': {
      id: '/_app/$examId'
      path: '/$examId'
      fullPath: '/$examId'
      preLoaderRoute: typeof AppExamIdRouteImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/edit': {
      id: '/_app/edit'
      path: '/edit'
      fullPath: '/edit'
      preLoaderRoute: typeof AppEditRouteImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/edit_/$examId': {
      id: '/_app/edit_/$examId'
      path: '/edit/$examId'
      fullPath: '/edit/$examId'
      preLoaderRoute: typeof AppEditExamIdRouteImport
      parentRoute: typeof AppRouteImport
    }
  }
}

// Add type-safety to the createFileRoute function across the route tree

declare module './routes/_app' {
  const createFileRoute: CreateFileRoute<
    '/_app',
    FileRoutesByPath['/_app']['parentRoute'],
    FileRoutesByPath['/_app']['id'],
    FileRoutesByPath['/_app']['path'],
    FileRoutesByPath['/_app']['fullPath']
  >
}
declare module './routes/login' {
  const createFileRoute: CreateFileRoute<
    '/login',
    FileRoutesByPath['/login']['parentRoute'],
    FileRoutesByPath['/login']['id'],
    FileRoutesByPath['/login']['path'],
    FileRoutesByPath['/login']['fullPath']
  >
}
declare module './routes/register' {
  const createFileRoute: CreateFileRoute<
    '/register',
    FileRoutesByPath['/register']['parentRoute'],
    FileRoutesByPath['/register']['id'],
    FileRoutesByPath['/register']['path'],
    FileRoutesByPath['/register']['fullPath']
  >
}
declare module './routes/_app.$examId' {
  const createFileRoute: CreateFileRoute<
    '/_app/$examId',
    FileRoutesByPath['/_app/$examId']['parentRoute'],
    FileRoutesByPath['/_app/$examId']['id'],
    FileRoutesByPath['/_app/$examId']['path'],
    FileRoutesByPath['/_app/$examId']['fullPath']
  >
}
declare module './routes/_app.edit' {
  const createFileRoute: CreateFileRoute<
    '/_app/edit',
    FileRoutesByPath['/_app/edit']['parentRoute'],
    FileRoutesByPath['/_app/edit']['id'],
    FileRoutesByPath['/_app/edit']['path'],
    FileRoutesByPath['/_app/edit']['fullPath']
  >
}
declare module './routes/_app.index' {
  const createFileRoute: CreateFileRoute<
    '/_app/',
    FileRoutesByPath['/_app/']['parentRoute'],
    FileRoutesByPath['/_app/']['id'],
    FileRoutesByPath['/_app/']['path'],
    FileRoutesByPath['/_app/']['fullPath']
  >
}
declare module './routes/_app.edit_.$examId' {
  const createFileRoute: CreateFileRoute<
    '/_app/edit_/$examId',
    FileRoutesByPath['/_app/edit_/$examId']['parentRoute'],
    FileRoutesByPath['/_app/edit_/$examId']['id'],
    FileRoutesByPath['/_app/edit_/$examId']['path'],
    FileRoutesByPath['/_app/edit_/$examId']['fullPath']
  >
}

// Create and export the route tree

interface AppRouteChildren {
  AppExamIdRoute: typeof AppExamIdRoute
  AppEditRoute: typeof AppEditRoute
  AppIndexRoute: typeof AppIndexRoute
  AppEditExamIdRoute: typeof AppEditExamIdRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppExamIdRoute: AppExamIdRoute,
  AppEditRoute: AppEditRoute,
  AppIndexRoute: AppIndexRoute,
  AppEditExamIdRoute: AppEditExamIdRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AppRouteWithChildren
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/$examId': typeof AppExamIdRoute
  '/edit': typeof AppEditRoute
  '/': typeof AppIndexRoute
  '/edit/$examId': typeof AppEditExamIdRoute
}

export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/$examId': typeof AppExamIdRoute
  '/edit': typeof AppEditRoute
  '/': typeof AppIndexRoute
  '/edit/$examId': typeof AppEditExamIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteWithChildren
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/_app/$examId': typeof AppExamIdRoute
  '/_app/edit': typeof AppEditRoute
  '/_app/': typeof AppIndexRoute
  '/_app/edit_/$examId': typeof AppEditExamIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/register'
    | '/$examId'
    | '/edit'
    | '/'
    | '/edit/$examId'
  fileRoutesByTo: FileRoutesByTo
  to: '/login' | '/register' | '/$examId' | '/edit' | '/' | '/edit/$examId'
  id:
    | '__root__'
    | '/_app'
    | '/login'
    | '/register'
    | '/_app/$examId'
    | '/_app/edit'
    | '/_app/'
    | '/_app/edit_/$examId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
}

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app",
        "/login",
        "/register"
      ]
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/$examId",
        "/_app/edit",
        "/_app/",
        "/_app/edit_/$examId"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    },
    "/_app/$examId": {
      "filePath": "_app.$examId.tsx",
      "parent": "/_app"
    },
    "/_app/edit": {
      "filePath": "_app.edit.tsx",
      "parent": "/_app"
    },
    "/_app/": {
      "filePath": "_app.index.tsx",
      "parent": "/_app"
    },
    "/_app/edit_/$examId": {
      "filePath": "_app.edit_.$examId.tsx",
      "parent": "/_app"
    }
  }
}
ROUTE_MANIFEST_END */
